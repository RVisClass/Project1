<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <script src="https://d3js.org/d3.v5.min.js"></script>
  <style>
  </style>
</head>

<body>
  <chart-area></chart-area>
  <script>
    // Feel free to change or delete any of the code you see in this editor!
    var margin = { left:80, right:20, top:50, bottom:100 };
var height = 500 - margin.top - margin.bottom, 
    width = 800 - margin.left - margin.right;

var g = d3.select("chart-area")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
    .append("g")
        .attr("transform", "translate(" + margin.left + 
            ", " + margin.top + ")");

var time = 0;

// Scales
var x = d3.scaleLog()
    .base(10)
    .range([0, width])
    .domain([0, 150000]);
    console.log(x)
var y = d3.scaleLinear()
    .range([height, 0])
    .domain([0, 20000]);
    console.log(y)
//var area = d3.scaleLinear()
    //.range([25*Math.PI, 1500*Math.PI])
    //.domain([2000, 1400000000]);
    //console.log(area)
//var continentColor = d3.scaleOrdinal(d3.schemePastel1);

// Labels
var xLabel = g.append("text")
    .attr("y", height + 50)
    .attr("x", width / 2)
    .attr("font-size", "20px")
    .attr("text-anchor", "middle")
    .text("GDP Per Capita ($)");
var yLabel = g.append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", -40)
    .attr("x", -170)
    .attr("font-size", "20px")
    .attr("text-anchor", "middle")
    .text("Life Expectancy (Years)")
/*var timeLabel = g.append("text")
    .attr("y", height -10)
    .attr("x", width - 40)
    .attr("font-size", "40px")
    .attr("opacity", "0.4")
    .attr("text-anchor", "middle")
    .text("1800");*/

// X Axis
var xAxisCall = d3.axisBottom(x)
		//.tickFormat(function(d){ return +d; });
    .tickValues(["1"])
    //.tickFormat(d3.format("$"));
g.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + height +")")
    .call(xAxisCall);

// Y Axis
var yAxisCall = d3.axisLeft(y)
    .tickFormat(function(d){ return +d; });
    
g.append("g")
    .attr("class", "y axis")
    .call(yAxisCall);//step 1
    
d3.json("births.json").then(function(data){
    console.log(data);//step 0
  data.forEach(function(d) {
            d.births = +d.births;
    d.year = +d.year;
    d.month = +d.month;
    d.date_of_month = +d.date_of_month;
        });
  //var i;
  /*var i;
  var arr = new Array(366);
for (i = 0; i < 15; i++) { 
  var j;
  for (j = 0; j < arr.length; j++) {
    if(d.month == 2 && d.date_of_month == 29) {
      //set date to last item in array
      // should happen four times
      // 2000, 2004, 2008, 2012
      var leapBirths = 0;
      leapBirths = d.births + leapBirths;
      arr[365] == d.births;
    } else {
      var regBirths = 0;
      regBirths = d.births + regBirths;
      arr[j] = regbirths;
    }
    
  }
}
  var k;
for (k = 0; k < 15; k++) {
  if(d.month == 2 && d.date_of_month == 29) {
    arr[365]= arr[365]/4;
  } else {
    arr[k]= arr[k]/15;
  }
  
} */
  var arr = new Array(366);
  var k;
  /*data.forEach(function(d) {
    arr[k] = d.births;
  }*/
	/*for (k = 0; k < 100; k++) {
    arr[k] = d.births;
  }*/
  //var dataset = [80, 100, 56, 120, 180, 30, 40, 120, 160];
  
  var barWidth = (width / data.length);
  var bars = g.selectAll("rect")
                .data(data)
            .enter().append("rect")
            //need to flip graph
                .attr("y", function(d){
                    return y(d.births);
                })
                .attr("x", function(d, i){
                    return (i * 5);
                })
                .attr("width", 10)
                //this also helps flip the graph
                .attr("height", function(d){
                    return height - y(d.births);
                })
  							//.attr("transform", function (d, i) {
         				//var translate = [barWidth * i, 0];
         				//return "translate("+ translate +")";
                .attr("fill", function(d) {
                    return "grey";
                });
    })
  </script>
</body>



